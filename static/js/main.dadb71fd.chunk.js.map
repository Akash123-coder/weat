{"version":3,"sources":["Component/Weather.js","Component/Temperature.js","App.js","index.js"],"names":["Weather","props","val","temp","console","log","z","toFixed","id","class","name","humid","pressure","flag","Temperature","useState","show","showWeather","showError","showErrormes","valChange","nameChange","tempChange","max","maxChange","humidChange","preChange","valueref","useRef","m","toLowerCase","a","fetch","response","json","data","length","ok","main","temp_max","humidity","useEffect","MovieHandler","onSubmit","event","preventDefault","current","value","className","type","ref","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"mQA2BeA,MA1Bf,SAAiBC,GAEf,IAAIC,EAAID,EAAME,KACdC,QAAQC,IAAIH,GACZE,QAAQC,WAAWH,GACnB,IAAII,EAAEJ,EAAI,OAGX,OAFCI,EAAEA,EAAEC,QAAQ,GACZH,QAAQC,IAAIC,GACL,qBAAKE,GAAG,kBAAR,SACR,sBAAKC,MAAM,cAAX,UACC,sBAAKA,MAAM,cAAX,UACC,uBAAMA,MAAM,OAAZ,UAAoBR,EAAMS,KAA1B,UACA,sBAAMD,MAAM,WAAZ,SAAwBH,OAEzB,sBAAKG,MAAM,iBAAX,UACGR,EAAMU,MAAM,IAAK,sBAAMF,MAAM,aAAZ,oBACjBR,EAAMU,MAAM,IAAK,sBAAMF,MAAM,aAAZ,oBACV,sBAAKA,MAAM,OAAX,UACA,uBAAMA,MAAM,OAAZ,UAAoBR,EAAMW,SAA1B,SACR,uBAAMH,MAAM,OAAZ,UAAoBR,EAAMU,MAA1B,mBChBAE,G,MAAK,GAqEMC,MAnEf,WAGI,MAAwBC,oBAAS,GAAjC,mBAAMC,EAAN,KAAWC,EAAX,KACA,EAA8BF,oBAAS,GAAvC,mBAAMG,EAAN,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,IAA/B,mBAAOb,EAAP,KAAWkB,EAAX,KACA,EAAuBL,mBAAS,IAAhC,mBAAML,EAAN,KAAWW,EAAX,KACA,EAAuBN,mBAAS,IAAhC,mBAAMZ,EAAN,KAAWmB,EAAX,KACA,EAAqBP,mBAAS,IAA9B,mBAAMQ,EAAN,KAAUC,EAAV,KACA,EAAyBT,mBAAS,IAAlC,mBAAMJ,EAAN,KAAYc,EAAZ,KACA,EAA0BV,mBAAS,IAAnC,mBAAMH,EAAN,KAAec,EAAf,KAUMC,EAASC,mBACXC,EAAE3B,EAAI4B,cApBd,4CA4BM,8BAAAC,EAAA,sEAEuBC,MAAM,oDAAD,OAAqDH,EAArD,4CAF5B,cAEOI,EAFP,gBAGkBA,EAASC,OAH3B,UAGOC,EAHP,OAIC/B,QAAQC,IAAI8B,EAAKC,QACbH,EAASI,GALd,wBAOKpB,GAAY,GACZE,GAAa,GARlB,8BAWiB,GAAbgB,EAAKC,OAXT,mDAiBCf,EAAWc,EAAKzB,MAChBY,EAAWa,EAAKG,KAAKnC,MACrBqB,EAAUW,EAAKG,KAAKC,UACpBd,EAAYU,EAAKG,KAAKE,UACtBd,EAAUS,EAAKG,KAAK1B,UArBrB,QAuBCO,GAAa,GAvBd,6CA5BN,sBAqDK,OAhCDsB,qBAAU,WACH5B,GAAM,GAtBjB,mCAwBQ6B,GAEA7B,MACC,CAACgB,IA0BG,uBAAMc,SA3Cf,SAAYC,GAERA,EAAMC,iBACNzB,EAAUO,EAASmB,QAAQC,QAwCtB,UACH,qBAAKC,UAAU,MAAf,SACA,uBAAOC,KAAK,OAAOC,IAAKvB,MAExB,qBAAKqB,UAAU,MAAMG,QA1C3B,WAEGlC,GAAY,IAwCT,SACA,wBAAQ+B,UAAU,SAAlB,2BAIA9B,GAAW,mBAAG8B,UAAU,MAAb,mCACXhC,GAAM,cAAC,EAAD,CAAUN,KAAMA,EAAMP,KAAMA,EAAMoB,IAAKA,EAAKZ,MAAOA,EAAOC,SAAUA,QCxDrEwC,MAXf,WACE,OACE,eAAC,WAAD,WACI,qBAAKJ,UAAU,MAAf,SACA,+CAEJ,cAAC,EAAD,QCJJK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.dadb71fd.chunk.js","sourcesContent":["import './Weat.css';\r\nfunction Weather(props)\r\n{  \r\n  let val=props.temp;\r\n  console.log(val);\r\n  console.log(typeof val);  \r\n  let z=val-273.15;\r\n  z=z.toFixed(2);\r\n  console.log(z);\r\n return (<div id=\"weather_wrapper\">\r\n\t<div class=\"weatherCard\">\r\n\t\t<div class=\"currentTemp\">\r\n\t\t\t<span class=\"temp\">{props.name}&deg;</span>\r\n\t\t\t<span class=\"location\">{z}</span>\r\n\t\t</div>\r\n\t\t<div class=\"currentWeather\">\r\n\t\t\t{(props.humid>50)&&<span class=\"conditions\">&#xf01d;</span>}\r\n\t\t\t{(props.humid<50)&&<span class=\"conditions\">&#xf00d;</span>}\r\n            <div class=\"info\">\r\n            <span class=\"wind\">{props.pressure}bar</span>\r\n\t\t\t\t<span class=\"rain\">{props.humid}%</span>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t</div>\r\n</div>);\r\n}\r\nexport default Weather;","import {useEffect,useRef,useState} from 'react';\r\nimport Weather from './Weather';\r\nimport './We.css'\r\nimport './Weat.css'\r\nvar flag=0;\r\n\r\nfunction Temperature()\r\n{\r\n\r\n    const[show,showWeather]=useState(false);\r\n    const[showError,showErrormes]=useState(false);\r\n    const [val,valChange]=useState('');\r\n    const[name,nameChange]=useState('');\r\n    const[temp,tempChange]=useState('');\r\n    const[max,maxChange]=useState('');\r\n    const[humid,humidChange]=useState('');\r\n    const[pressure,preChange]=useState('');\r\n    function f1(event)\r\n    {\r\n        event.preventDefault();\r\n        valChange(valueref.current.value)\r\n    }\r\n    function showWeather1()\r\n   {\r\n       showWeather(true); \r\n   }\r\n    const valueref=useRef();\r\n    let m=val.toLowerCase(); \r\n    useEffect(() => {   //to get the data directly when the page relaods...\r\n        if(flag>=1)\r\n        {\r\n        MovieHandler();\r\n        }\r\n        flag++;\r\n      }, [m]);//as you can also go for the Moviehandler as dependencies but than we have to use usecallback with moviehandler....\r\n      async function MovieHandler()\r\n      {\r\n       const response= await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${m}&appid=45ab389e935d7d9f54159c706fdda7b7`);\r\n       const data=await response.json();\r\n       console.log(data.length);\r\n       if(!response.ok)\r\n       {\r\n           showWeather(false);\r\n           showErrormes(true);\r\n           return;\r\n       }\r\n       if(data.length==0)\r\n       {\r\n         return;\r\n       }  \r\n       else\r\n       {\r\n       nameChange(data.name);\r\n       tempChange(data.main.temp);\r\n       maxChange(data.main.temp_max);\r\n       humidChange(data.main.humidity);\r\n       preChange(data.main.pressure);\r\n       }\r\n       showErrormes(false);\r\n     }\r\n     return (<form onSubmit={f1}> \r\n          <div className='bet'>\r\n          <input type=\"text\" ref={valueref}></input>\r\n          </div>\r\n          <div className=\"met\" onClick={showWeather1}>\r\n          <button className='button' >\r\n          Temperature\r\n        </button>\r\n              </div> \r\n         {showError&&<p className='inv'>Invalid City Name!!!!</p>}\r\n         {show&&<Weather  name={name} temp={temp} max={max} humid={humid} pressure={pressure}/>}\r\n     </form>);\r\n}\r\nexport default Temperature;","import { Fragment } from 'react';\nimport Temperature from './Component/Temperature'\nimport './Component/Weat.css'\nfunction App() {\n  return(\n    <Fragment>\n        <div className='bet'>\n        <h1>Weather App</h1>\n          </div>\n    <Temperature/>\n    </Fragment>\n    \n  )\n}\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}